#!/bin/bash

# Set posix mode
set -o posix;



#source /lib/GenReport/redis_connection.sh;

#source /lib/GenReport/get_and_set.sh;

source /lib/GenReport/get.sh;
source /lib/GenReport/set.sh;


report_date=$(date +%Y-%m-%d); # Sets file name later

# Set report pathc
report_path=/home/awesomepilot/Documents/Work/Notes

# Get the current report file
report_file=$report_path/$report_date.txt;

function show_help() {
    clear;
    # Declare vars
    local help_text;
    help_text=$(cat /usr/share/help_doc.txt);

    echo "$help_text";
    return 0;
}

# A function to export the report as a text file
function export_report() {
    local report_to_export=$1;

    report_exists "$report_to_export";
    if [ "$?" == 1 ]; then
        echo "That report doesn't exist.  Nothing exported...";
        exit 1;
    fi

    local report_string=$(get_report "$report_to_export");

    unstringify_report "$report_string" > /home/$USER/Documents/Work/$report_to_export.txt;
}

# Parse arguments and set variables
while getopts "n:p:e:b:l:t:d:x:hkq" arg; do
    case "$arg" in
        n)
            client_name=${OPTARG};
        ;;
        p)
            client_phone=${OPTARG};
        ;;
        e)
            client_email=${OPTARG};
        ;;
        b)
            client_bizz_name=${OPTARG};
        ;;
        h)
            show_help;
            exit 0
        ;;
        l)
            entry_to_list=${OPTARG};
            
            rep_string=$(get_report "$entry_to_list");
            unstringify_report "$rep_string";
            
            exit 0;
        ;;
        k)
            get_all_report_keys;
            exit 0;
        ;;
        t) # (t)ransform edits reports
            edit_report ${OPTARG};
            exit 0;
        ;;
        q)
            get_latest_report;
            exit 0;
        ;;
        d)
            delete_report ${OPTARG};
            if [ $? != 0 ]; then
                exit 1;
            fi
            exit 0;
        ;;
        x)
            export_report ${OPTARG};
            exit 0;
        ;;
        ?)
            show_help;
            exit 1;
        ;;
        *)
            echo "Oops you may have made an invalid entry.  Pleae try again.";
            exit 1;
    esac
done

function create_work_notes() {
    # Clear screen
    clear;
    
    # Get work notes
    echo "Enter work notes, hit Ctl-D to save>";
    work=$(</dev/stdin);
}

function create_side_notes() {
    # Clear screen
    clear;
    
    # Set side notes
    echo "Enter side notes if any, hit Ctl-D to save>";
    notes=$(</dev/stdin);
}


# Create report at ~/$USER/Documents/Work/Notes/
function create_report() {
    # cat > $report_path/$report_date.txt << _EOF_
cat > /tmp/report.txt << _EOF_
(Client Report - Date: $report_date)
------------------------------------------
## Client Information ##
------------------------------------------
Client Name: $client_name
Client Phone: $client_phone
Client Email: $client_email
Client Business: $client_bizz_name
------------------------------------------
## Work Performed ##
------------------------------------------
$work
------------------------------------------
## Notes ##
------------------------------------------
$notes
------------------------------------------
_EOF_
    
    report_text=/tmp/report.txt;
    
    # Insert generated report into redis
    set_report "$client_name" "$report_text";
    if [ "$?" != 0 ]; then
        echo "There was a problem inserting your report...Make sure Redis is up?";
        exit 1;
    fi
    
    rm -rf "$report_text";
    return 0;
}

# Check if all arguments are accounted for
if [ -z $client_name ]; then
    echo "You cannot leave Client Name field empty...";
    exit 1;
    elif [ -z $client_phone ]; then
    echo "You cannot leave Client Phone field empty...";
    exit 1;
    elif [ -z $client_email ]; then
    echo "You cannot leave Client Email field empty...";
    exit 1;
    elif [ -z $client_bizz_name ]; then
    echo "You cannot leave Client Bussiness Name field empty...";
    exit 1;
fi

# Create new report if not exists and overwrite if it does
create_work_notes;
create_side_notes;
create_report;